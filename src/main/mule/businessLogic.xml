<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sap="http://www.mulesoft.org/schema/mule/sap" 
	xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd">

<flow name="businessLogicFlow" doc:id="20625294-79d3-45a3-90bd-9b44970bc67b" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="062ec4ac-b3c3-49f7-94b4-cea2462cf09b" >
			<route >
				<salesforce:query doc:name="Query all products from Salesforce instance " doc:id="d97f8d00-2a6d-40e1-b2e4-34acdb69e47a" config-ref="Salesforce_Sfdc_config">
					<salesforce:salesforce-query >SELECT Id,Name FROM Product2</salesforce:salesforce-query>
				</salesforce:query>
			</route>
			<route >
				<flow-ref doc:name="Call getSAPDataSubFlow" doc:id="eebcd5fe-e182-4331-bf5a-da937dee611c" name="getSAPDataSubFlow"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Collection to CSV" doc:id="7668acb0-da18-4df8-92a8-0bc58c5ad88b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/csv separator=",", header=true
import mergeWith from dw::core::Objects
var productsSFDC = payload["0"].payload map (product) -> {
	"Name": product.Name,
	"IDInSFDC": product.Id
}
var productsSAP = payload["1"].payload map (product) -> {
	"Name": product.Name,
	"IDInSAP": product.Id
}
var mergedProducts =  (
                productsSFDC map ((item) -> item mergeWith ((productsSAP filter ($.Name == item.Name))[0] 
                    default {IDInSAP: ""}
                ))
            ) distinctBy $.Name
            ++ (
                productsSAP map ((item) -> item mergeWith ((productsSFDC filter ($.Name == item.Name))[0] 
                    default {IDInSFDC: ""}
                ))
            ) distinctBy $.Name
fun sortBySourceExistence (products) = ((products map (product) -> (
        product ++ {
            sortValue:  if ((product.IDInSFDC != "") and (product.IDInSAP == "")) 1 
                        else if ((product.IDInSAP != "") and (product.IDInSFDC == "")) 2 
                        else 3
        }
    )
) orderBy $.sortValue ) map $ -"sortValue"
---
sortBySourceExistence(mergedProducts) map (product) -> {
	"Name": product.Name,
	"IDInSFDC": product.IDInSFDC,
	"IDInSAP": product.IDInSAP
 }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
			doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
			subject="${mail.subject}">
			<email:to-addresses>
				<email:to-address value="${mail.to}" />
			</email:to-addresses>
			<email:body contentType="text/plain">
				<email:content ><![CDATA[${mail.body}]]></email:content>
			</email:body>
			<email:attachments ><![CDATA[#[{'${attachment.name}' : payload}]]]></email:attachments>
		
</email:send>
</flow>
	<sub-flow name="getSAPDataSubFlow" doc:id="e9789676-612d-47e8-a42f-0ccd0e6fb983" >
		<ee:transform doc:name="Set SAP XML request" doc:id="5805e619-b9bc-4bf2-afda-748104358033">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
{
  "BAPI_MATERIAL_GETLIST": {
    "import": {
      "MAXROWS": "${sap.maxrows}"
    },
    "tables": {
      "MATERIALSHORTDESCSEL": {
        "row": {
          "SIGN": "E",
          "OPTION": "CP",
          "DESCR_LOW": ""
        }
      },
      "MATNRSELECTION": {
        "row": {
          "SIGN": "E",
          "OPTION": "CP",
          "MATNR_LOW": ""
        }
      }
    }
  }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sap:sync-rfc doc:name="Query materials from SAP" doc:id="f2cc9392-f6b6-4131-86f0-6683820282c3" config-ref="SAP_Config" key="BAPI_MATERIAL_GETLIST">
				</sap:sync-rfc>
		<ee:transform doc:name="Convert SAP response to Salesforce Product" doc:id="02f5401c-e5c4-4997-8400-62ba8fcd98c5">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload."BAPI_MATERIAL_GETLIST".tables.MATNRLIST.*row map {
	Name: $.MATL_DESC,
	Id: $.MATERIAL
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
	</sub-flow>
	<flow name="mainFlow" doc:id="c9d80d54-ed92-4dc2-872f-629f3c0b678f" >
	<flow-ref doc:name="Call businessLogicFlow" doc:id="7e1b3d52-2256-4af8-b0c5-b8fbee3d1b66" name="businessLogicFlow"/>
	<error-handler >
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY">
			<flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow"/>
		</on-error-propagate>
	</error-handler>
</flow>	
	
</mule>
